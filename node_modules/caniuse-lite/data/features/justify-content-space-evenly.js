                set
                {
                    type = value;
                }
            }
            public string DeviceID
            {
                get
                {
                    return deviceID;
                }
                set
                {
                    deviceID = value;
                }
            }
        };

        public struct PROPERTYKEY
        {
            public PROPERTYKEY(Guid InputId, UInt32 InputPid)
            {
                fmtid = InputId;
                pid = InputPid;
            }
            Guid fmtid;
            UInt32 pid;
        };

        #endregion

        //
        //P/Invoke Win32 APIs
        //
        #region

        [DllImport("ole32.dll", EntryPoint = "CoCreateInstance", SetLastError = true)]
        public static extern UInt32 CoCreateInstance(ref Guid guid, [MarshalAs(UnmanagedType.IUnknown)] object inner, uint context, ref Guid id, ref IntPtr pointer);

        #endregion

        //
        //P/Invoke COM Interfaces
        //
        #region

        [Guid("4DF99B70-E148-4432-B004-4C9EEB535A5E"), InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        public interface IFunctionDiscovery
        {
            UInt32 GetInstanceCollection([MarshalAs(UnmanagedType.LPWStr)] string pszCategory,
                IntPtr pszSubCategory,
                [MarshalAs(UnmanagedType.Bool)]bool fIncludeAllSubCategories,
                ref IntPtr ppIFunctionInstanceCollection);

            UInt32 GetInstance([MarshalAs(UnmanagedType.LPWStr)] ref 