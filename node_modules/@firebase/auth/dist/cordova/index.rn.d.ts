enceHost.Storage.SharableData.getValue", "ue_enrollmentServiceFullURL");
            var passwordPromise = bridge.invoke("CloudExperienceHost.Storage.PrivateData.addItem", "ue_password", password.value.trim());
            var domainPromise = bridge.invoke("CloudExperienceHost.Storage.PrivateData.addItem", "ue_domainName", domainName.value.trim());
            WinJS.Promise.join({
                UPN: UPNPromise, serverURL: serverURLPromise, authPolicy: authPolicyPromise, enrollmentFlags: enrollmentFlagsPromise, policyServiceFullURL: policyServiceFullURLPromise,
                enrollmentServiceFullURL: enrollmentServiceFullURLPromise, password: passwordPromise, domain: domainPromise
            }).done(function (result) {
                
                bridge.invoke("CloudExperienceHost.UnifiedEnroll.doEnrollment", result.UPN, result.serverURL, password.value.trim(), result.authPolicy, domainName.value.trim(), result.policyServiceFullURL, result.enrollmentServiceFullURL, correlationVector, result.enrollmentFlags, "").done(function (result) {
                    
                    if (MENROLL_E_INVALIDSSLCERT === result.enrollmentErrorCode) { 
                        _invalidCertWarning();
                    } else {
                        var enrollmentResultPromise = bridge.invoke("CloudExperienceHost.Storage.SharableData.addValue", "ue_mdm_enrollment_result", result.enrollmentErrorCode);
                        var enrollmentErrorStringPromise = bridge.invoke("CloudExperienceHost.Storag