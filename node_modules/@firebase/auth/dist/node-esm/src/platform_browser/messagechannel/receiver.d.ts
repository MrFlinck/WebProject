tListener("debuggingdisabled",t)};this._debugger.addEventListener("debuggingdisabled",t);this._debugger.disable()}else e&&e(0)}getSourceText(e,t,i){try{const r=parseInt(e,10),n=this._debugger.getSourceText(r);let s=n.text;"number"==typeof t&&t>=0&&(s="number"==typeof i&&i>=0?s.substr(t,i):s.substr(t));n.text=s;return n}catch(e){return{loadFailed:!0,text:""}}}causeBreak(e,t){let i=t;("number"!=typeof i||isNaN(i))&&(i=0);switch(e){case 0:this._breakOnAny=!0;this._isNextBreakCausedByUser=!0;break;case 1:this._breakOnAnyNewWorkerStarting=!0;break;case 2:this._breakIntoSpecificWorkerIds.push(i);break;case 3:this._breakOnAnyNewWorkerStarting=!1;this._lastStartedWorkerId=void 0;break;default:throw new Error("CauseBreakAction not known")}return this._debugger.causeBreak(e,i)}resume(e){1!==e&&(this._isNextBreakCausedByUser=!0);return this._debugger.resume(e)}getBreakpointIdFromSourceLocation(e,t){const i=parseInt(e,10),r=this._debugger.getBreakpointIdFromSourceLocation(i,t);return 0!==r?this.bpString(r):u}addEventBreakpoint(e,t,i="",r=!1){const n=this._debugger.addEventBreakpoint(e,t,i,r);return n?{breakpointId:this.bpString(n.breakpointId),condition:i,eventTypes:n.eventTypes,failed:!1,isBound:n.isBound,isEnabled:n.isEnabled,isTracepoint:r}:{breakpointId:":failed:"+e.join(","),eventTypes:e,failed:!0,isBound:!1,isEnabled:!1}}addCodeBreakpoint(e,t,i,r=!1,n=!1){const s=parseInt(e,10);if(isNaN(s)||!this._documentMap.has(s))return{breakpointId:":failed:"+e,failed:!0,isBound:!1,isEnabled:!1,location:{docId:e,start:t,length:1}};const o=this._debugger.addCodeBreakpoint(s,t,i,r);if(o){o.location.docId=String(o.location.docId);return{breakpointId:this.bpString(o.breakpointId),condition:i,failed:!1,isBound:o.isBound,isEnabled:o.isEnabled,isPseudoBreakpoint:n,isTracepoint:r,location:o.location}}return{breakpointId:":failed:"+e,failed:!0,isBound:!1,isEnabled:!1,location:{docId:e,start:t,length:1}}}addPendingBreakpoint(e){const t=this._debugger.addPendingBreakpoint(e.url,e.rawLocation.start,e.condition,e.isEnabled,e.isTracepoint);return t?this.bpString(t):""}removeBreakpoint(e){const t=this.getBpIdNumber(e);return this._debugger.removeBreakpoint(t)}setBreakpointEnabledState(e,t){const i=this.getBpIdNumber(e);return this._debugger.setBreakpointEnabledState(i,t)}setBreakpointCondition(e,t,i){const r=this.getBpIdNumber(e);return this._debugger.updateBreakpoint(r,t,i)}setExceptionFilter(e){this._exceptionFilter=e;return this._